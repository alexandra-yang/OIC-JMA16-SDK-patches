From a95739a368f15f6d008a53e4d623358d4312cba6 Mon Sep 17 00:00:00 2001
From: Michal Kazior <michal@plume.com>
Date: Wed, 16 Nov 2022 09:50:39 +0100
Subject: [PATCH 1/2] wpa_supplicant: make scan_cur_freq possibly more reliable

This adds a way to query the underlying driver for
all in-use frequencies.

THis allows wpa_s to infer what other channels are
in-use when paired up with, for example, hostapd.
Otherwise wpa_s is not aware of any sibling
interfaces in its internal structures.

Signed-off-by: Michal Kazior <michal@plume.com>
---
 src/drivers/driver.h            | 18 ++++++++++++++++++
 wpa_supplicant/driver_i.h       |  9 +++++++++
 wpa_supplicant/wpa_supplicant.c |  8 ++++++++
 3 files changed, 35 insertions(+)

diff --git a/src/drivers/driver.h b/src/drivers/driver.h
index e8defaba2..103e15ef3 100644
--- a/src/drivers/driver.h
+++ b/src/drivers/driver.h
@@ -4456,6 +4456,24 @@ struct wpa_driver_ops {
 	 * a given interface.
 	 */
 	int (*get_wideband_support)(void *priv);
+
+	/**
+	 * get_used_freqs - Ask driver what frequencies are currently in use
+	 * @priv: Private driver interface data
+	 * @freqs_data: Array to fill up
+	 * @len: length
+	 * Returns: >0 on success expressing number freqs that were enumerate;
+	 *           can be greater than @len. -1 on failure
+	 *
+	 * This optional callback can be used to advertise what all interfaces
+	 * on a given radio operate on at the time of query.
+	 *
+	 * This is intended to allow us to know about about interfaces
+	 * possibly not managed by us, but which do impact our decisions.
+	 */
+	int (*get_used_freqs)(void *priv,
+			      int *freq_array,
+			      unsigned int len);
 };
 
 /**
diff --git a/wpa_supplicant/driver_i.h b/wpa_supplicant/driver_i.h
index ba8cc552b..ec0148664 100644
--- a/wpa_supplicant/driver_i.h
+++ b/wpa_supplicant/driver_i.h
@@ -1115,4 +1115,13 @@ static inline int wpa_drv_dpp_listen(struct wpa_supplicant *wpa_s, bool enable)
 	return wpa_s->driver->dpp_listen(wpa_s->drv_priv, enable);
 }
 
+static inline int wpa_drv_get_used_freqs(struct wpa_supplicant *wpa_s,
+					 int *freq_array,
+					 unsigned int len)
+{
+	if (!wpa_s->driver->get_used_freqs)
+		return 0;
+	return wpa_s->driver->get_used_freqs(wpa_s->drv_priv, freq_array, len);
+}
+
 #endif /* DRIVER_I_H */
diff --git a/wpa_supplicant/wpa_supplicant.c b/wpa_supplicant/wpa_supplicant.c
index 39e92fb68..cb565e165 100644
--- a/wpa_supplicant/wpa_supplicant.c
+++ b/wpa_supplicant/wpa_supplicant.c
@@ -7826,6 +7826,14 @@ int get_shared_radio_freqs(struct wpa_supplicant *wpa_s,
 
 	os_memset(freq_array, 0, sizeof(int) * len);
 
+	/* If driver supports reporting this it has a chance
+	 * of reporting sibling virtual interfaces that
+	 * aren't managed by us, eg. are driven by hostapd.
+	 */
+	num = wpa_drv_get_used_freqs(wpa_s, freq_array, len);
+	if (num > 0)
+		return num;
+
 	freqs_data = os_calloc(len, sizeof(struct wpa_used_freq_data));
 	if (!freqs_data)
 		return -1;
-- 
2.38.1

